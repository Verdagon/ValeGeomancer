
func Save(server &EditorInstance) {
  Path(server.levelPath)&.writeString(Serialize(&server.terrainController.terrain));
}

func Serialize(terrain &PatternMap<TerrainTile>) str {
  builder = StringBuilder();

  foreach [loc, tile] in terrain.tiles {
    [x, y, i] = loc;
    line = "{x} {y} {i} {tile.elevation}";
    foreach member in tile.members {
      set line = line + " " + member;
    }
    builder.println(line);
  }
  ret builder.assembleStr();
}

func Load(filename str, terrain &PatternMap<TerrainTile>) {
  text = Path(filename)&.readAsString();
  lines = text.split("\n");
  foreach line in lines {
    if line.trim().len() > 0 {
      [parts] = line.split(" ");
      if parts.len() < 4 {
        panic("Badly formatted line: " + line);
      }
      group_x = int(parts[0]).or({ panic("Badly formatted line: " + line) });
      group_y = int(parts[1]).or({ panic("Badly formatted line: " + line) });
      index_in_group = int(parts[2]).or({ panic("Badly formatted line: " + line) });
      elevation = int(parts[3]).or({ panic("Badly formatted line: " + line) });

      loc = Location(group_x, group_y, index_in_group);
      tile = TerrainTile(loc, elevation, List<str>());

      foreach member in range(4, parts.len()) {
        tile.members.add(parts[member].str());
      }

      terrain.tiles.add(loc, tile);
    }
  }
}
